[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "fastai notes",
    "section": "",
    "text": "To learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "blog/create_blog.html",
    "href": "blog/create_blog.html",
    "title": "How to create a blog for hosting jupyter notebooks",
    "section": "",
    "text": "Code\nfrom IPython.display import Image, display\nfrom ipywidgets import widgets, HBox"
  },
  {
    "objectID": "blog/create_blog.html#step-1-create-a-github-repository-for-your-blog",
    "href": "blog/create_blog.html#step-1-create-a-github-repository-for-your-blog",
    "title": "How to create a blog for hosting jupyter notebooks",
    "section": "Step 1: Create a github repository for your blog",
    "text": "Step 1: Create a github repository for your blog\nHere I’m creating a repo called blog for all my blogging needs.\n\n\nCode\nImage(filename='files/create_repo.png', width='400') \n\n\n\n\n\nDownload the repo to your local machine so you can add in files:\n\nI like using Github Desktop for this. But whatever works for you.\nHere’s a tutorial on how to download code from github (aka cloning repos from github)\n\n\n\nCode\nImage(filename='files/download_repo.png', width='600') \n\n\n\n\n\nChoose the destination path (local path) where you want your repo:\n\nI’m choosing Documents/GitHub/blog\n\n\n\nCode\nImage(filename='files/choose_dest.png', width='600')"
  },
  {
    "objectID": "blog/create_blog.html#step-2-head-over-to-quarto-docs-to-learn-how-to-create-files-required-for-building-your-website",
    "href": "blog/create_blog.html#step-2-head-over-to-quarto-docs-to-learn-how-to-create-files-required-for-building-your-website",
    "title": "How to create a blog for hosting jupyter notebooks",
    "section": "Step 2: Head over to quarto docs to learn how to create files required for building your website",
    "text": "Step 2: Head over to quarto docs to learn how to create files required for building your website\n\nHead over to https://quarto.org/docs/websites/\nI prefer setting things up using the terminal.\n\nAs the docs say, you need to do the follwing:\n\nbe in the parent folder of where your blog is. For me, this means being at Documents/GitHub\nrun the command to create quarto’s magic files in your blog: quarto create-project blog --type website\nrun quarto preview blog to view the preview of the built in website\n\n\n\nCode\nx = Image(filename='files/quarto_website.png', width='400') \ny = Image(filename='files/create_files.png', width='400') \nz = Image(filename='files/orig_preview.png', width='400')\ndisplay(x, ' ', y, '', z)\n\n\n\n\n\n' '\n\n\n\n\n\n''"
  },
  {
    "objectID": "blog/create_blog.html#step-3-make-changes-to-_quarto.yml",
    "href": "blog/create_blog.html#step-3-make-changes-to-_quarto.yml",
    "title": "How to create a blog for hosting jupyter notebooks",
    "section": "Step 3: Make changes to _quarto.yml",
    "text": "Step 3: Make changes to _quarto.yml\n\nHere, I remove (comment out) the blue navigation bar navbar and add a sidebar instead.\n\nSee the quarto docs on navbar and sidebar\n\nIn the sidebar, I create 2 sections: fastai and blog.\n\nUnder each section is contents where I put in the relative paths of notebooks I want to display under those sections.\nTo keep this organized, I’ve created two separate folders lessons and myblog\nWhenever I need to add a new notebook:\n\nI can just download the notebook from Colab (or Kaggle)\ndrop nb into the corresponding folder\nadd a line under the correct section pointing to the nb’s path\n\n\n\n\n\nCode\nx = Image(filename='files/yml_file.png', width='400') \ny = Image(filename='files/files.png', width='200') \ndisplay(x, ' ', y,)\n\n\n\n\n\n' '\n\n\n\n\n\nUsing quarto preview blog in the terminal (as I did in the previous step, I can see what my website looks like:\n\nthe sidebar has 2 sections fastai and blog\n\nunder each is a rendered nb\n\n\n\n\nCode\nImage(filename='files/new preview.png', width='600')"
  },
  {
    "objectID": "blog/create_blog.html#step-4-publish-blog-to-github-pages",
    "href": "blog/create_blog.html#step-4-publish-blog-to-github-pages",
    "title": "How to create a blog for hosting jupyter notebooks",
    "section": "Step 4: Publish blog to github pages",
    "text": "Step 4: Publish blog to github pages\nTo complete this step, I used github pages, publish command from the quarto documentation.\n\nStep 4.1 New branch called gh-pages\nI use github desktop to do git related things:\n\nCommit changes to main branch\nCreate a new branch called gh-pages\n\n\n\nCode\n!ls -ltr files\n\n\ntotal 7530\n-rw------- 1 root root  536600 Oct 22 08:10  create_repo.png\n-rw------- 1 root root  934879 Oct 22 08:40  download_repo.png\n-rw------- 1 root root  780780 Oct 22 08:43  choose_dest.png\n-rw------- 1 root root  684226 Oct 22 08:48  quarto_website.png\n-rw------- 1 root root  223923 Oct 22 08:54  create_files.png\n-rw------- 1 root root  163439 Oct 22 10:12  orig_preview.png\n-rw------- 1 root root  126830 Oct 22 10:18  yml_file.png\n-rw------- 1 root root   66804 Oct 22 10:18  files.png\n-rw------- 1 root root 1178521 Oct 22 10:32 'new preview.png'\n-rw------- 1 root root  572315 Oct 22 10:41 'commit changes.png'\n-rw------- 1 root root  498975 Oct 22 10:42  create_branch.png\n-rw------- 1 root root  534631 Oct 22 10:43  publish_branch.png\n-rw------- 1 root root  572489 Oct 22 10:44  check_settings.png\n-rw------- 1 root root  295161 Oct 22 10:45  gitignore.png\n-rw------- 1 root root  158490 Oct 22 10:46  publish.png\n-rw------- 1 root root  377923 Oct 22 10:47  final_view.png\n\n\n\n\nCode\nx = Image(filename='files/create_branch.png', height='400') \ny = Image(filename='files/publish_branch.png', height='400') \n\ndisplay(x, ' ', y,)\n\n\n\n\n\n' '\n\n\n\n\n\n\nThen go to github repo, check settings are okay. I didn’t need to make any changes here.\n\n\n\nCode\nImage(filename='files/check_settings.png', height='400') \n\n\n\n\n\n\n\nStep 4.2: Modify .gitignore\n\n\nCode\nImage(filename='files/gitignore.png', height='400') \n\n\n\n\n\n\nMove to the main branch, push all changes to remote\n\n\n\nCode\nImage(filename='files/commit_changes2.png', height='400')"
  },
  {
    "objectID": "blog/create_blog.html#step-5-publish-while-youre-in-main-branch",
    "href": "blog/create_blog.html#step-5-publish-while-youre-in-main-branch",
    "title": "How to create a blog for hosting jupyter notebooks",
    "section": "Step 5: Publish (while you’re in main branch)!",
    "text": "Step 5: Publish (while you’re in main branch)!\n\nHere’s the quarto documentation\n\n\n\nCode\nImage(filename='files/publish.png', height='200') \n\n\n\n\n\nThe final site looks like this:\n\nFrom the address bar, you see this is hosted on github now\n\n\n\nCode\nImage(filename='files/final_view.png', height='300')"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "lessons/01_what_is_that.html",
    "href": "lessons/01_what_is_that.html",
    "title": "1- What is that?",
    "section": "",
    "text": "Trying out the concepts taught in fastai lesson 1 with a new dataset.\nInspired by this Superman comic, I’m building a deep learning classifier to distinhuish between images of birds, planes and supermen."
  },
  {
    "objectID": "lessons/01_what_is_that.html#workflow",
    "href": "lessons/01_what_is_that.html#workflow",
    "title": "1- What is that?",
    "section": "Workflow",
    "text": "Workflow\nHere’s the process:\n\nChoose categories- bird, plane, superman\nDownload 1 image for each and check they’re ok\nDownload 30 images for each into directories named by category\nCheck images are valid\nDownload pre-trained model\nFeed dir of images into model, fine tune, check performance\n\n\n\n!pip install -Uqq fastai duckduckgo_search\n\n     |█████▏                          | 10 kB 24.3 MB/s eta 0:00:01     |██████████▍                     | 20 kB 15.9 MB/s eta 0:00:01     |███████████████▋                | 30 kB 20.8 MB/s eta 0:00:01     |████████████████████▉           | 40 kB 13.2 MB/s eta 0:00:01     |██████████████████████████      | 51 kB 7.1 MB/s eta 0:00:01     |███████████████████████████████▎| 61 kB 8.4 MB/s eta 0:00:01     |████████████████████████████████| 62 kB 1.5 MB/s \n     |███▍                            | 10 kB 25.6 MB/s eta 0:00:01     |██████▉                         | 20 kB 33.5 MB/s eta 0:00:01     |██████████▏                     | 30 kB 38.0 MB/s eta 0:00:01     |█████████████▋                  | 40 kB 43.0 MB/s eta 0:00:01     |█████████████████               | 51 kB 44.0 MB/s eta 0:00:01     |████████████████████▍           | 61 kB 47.6 MB/s eta 0:00:01     |███████████████████████▊        | 71 kB 50.3 MB/s eta 0:00:01     |███████████████████████████▏    | 81 kB 51.8 MB/s eta 0:00:01     |██████████████████████████████▌ | 92 kB 53.5 MB/s eta 0:00:01     |████████████████████████████████| 96 kB 6.5 MB/s \nERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\nflask 1.1.4 requires click<8.0,>=5.1, but you have click 8.1.3 which is incompatible.\n\n\n\nfrom duckduckgo_search import ddg_images\nfrom fastcore.all import *"
  },
  {
    "objectID": "lessons/01_what_is_that.html#data",
    "href": "lessons/01_what_is_that.html#data",
    "title": "1- What is that?",
    "section": "Data",
    "text": "Data\n\nSearching for images\n\nbird = ddg_images('bird', max_results=2)\n\n\nBird is a list of dicts\nwrap inside L\nuse .itemgot('image') on L to extract the urls only\n\n\nbird\n\n[{'title': 'Pair these bird events with Great Backyard Bird Count - pennlive.com',\n  'image': 'https://www.pennlive.com/resizer/UeXGnWaOE07lC4n_J5lJ0a1M-_M=/1280x0/smart/advancelocal-adapter-image-uploads.s3.amazonaws.com/image.pennlive.com/home/penn-media/width2048/img/entertainment_impact/photo/shutterstock-58364638jpg-6932548563f01558.jpg',\n  'thumbnail': 'https://tse1.mm.bing.net/th?id=OIP.tAh4IvhbxtzpJUCMwC-djQHaGe&pid=Api',\n  'url': 'https://www.pennlive.com/entertainment/2015/02/pair_these_bird_events_with_gr.html',\n  'height': 1118,\n  'width': 1280,\n  'source': 'Bing'},\n {'title': \"Help Count Birds for Science during Audubon's Annual Christmas Bird Count - Restore the ...\",\n  'image': 'https://www.mississippiriverdelta.org/files/2015/12/BUFH-wing-feathers.jpg',\n  'thumbnail': 'https://tse2.mm.bing.net/th?id=OIP.1xYUOvqR7iH9FMoKBawtIAHaF1&pid=Api',\n  'url': 'https://mississippiriverdelta.org/help-count-birds-for-science-during-audubons-annual-christmas-bird-count/',\n  'height': 1340,\n  'width': 1700,\n  'source': 'Bing'}]\n\n\n\nL(bird).itemgot('image')\n\n(#2) ['https://www.pennlive.com/resizer/UeXGnWaOE07lC4n_J5lJ0a1M-_M=/1280x0/smart/advancelocal-adapter-image-uploads.s3.amazonaws.com/image.pennlive.com/home/penn-media/width2048/img/entertainment_impact/photo/shutterstock-58364638jpg-6932548563f01558.jpg','https://www.mississippiriverdelta.org/files/2015/12/BUFH-wing-feathers.jpg']\n\n\nBuild search_images using these\n\ndef search_images(keyword, max_images=30):\n    return L(ddg_images(keyword, max_results=max_images)).itemgot('image')\n\n\nurl = search_images('flying bird', 1)\nurl\n\n(#1) ['http://1.bp.blogspot.com/-6anwlEoD-Ec/UmvgxLKbxsI/AAAAAAAAZhQ/z64F1RGv7iU/s1600/Flying+Birds+Wallpapers+%25283%2529.jpg']\n\n\n\n\nDownloading and viewing single images\n\nfrom fastdownload import download_url\ndownload_url(url[0], dest='bird.jpg', show_progress=False)\n\nPath('bird.jpg')\n\n\n\nfrom fastai.vision.all import *\nim = Image.open('bird.jpg')\nim.to_thumb(256,256)\n\n\n\n\n\ndownload_url(search_images('flying plane', 1)[0], dest='plane.jpg', show_progress=False)\nImage.open('plane.jpg').to_thumb(256, 256)\n\n\n\n\n\ndownload_url(search_images('flying superman', 1)[0], dest='superman.jpg', show_progress=False)\nImage.open('superman.jpg').to_thumb(256, 256)\n\n\n\n\n\n\nDownload many images\n\nimport os\n\n\nsearches = ['bird', 'plane', 'superman']\npath = Path('is_that_a')\n\nfor s in searches:\n    dest = (path/s)\n    dest.mkdir(exist_ok=True, parents=True)\n    download_images(dest, urls=search_images(f'flying {s}'))\n    resize_images(path/s, max_size=400, dest=path/s)\n\n\nfailed = verify_images(get_image_files(path))\nfailed.map(Path.unlink)\nlen(failed)\n\n0"
  },
  {
    "objectID": "lessons/01_what_is_that.html#fine-tune-model",
    "href": "lessons/01_what_is_that.html#fine-tune-model",
    "title": "1- What is that?",
    "section": "Fine-tune model",
    "text": "Fine-tune model\n\ndls = DataBlock(blocks=(ImageBlock, CategoryBlock), \n                get_items=get_image_files,\n                splitter=RandomSplitter(valid_pct=0.2, seed=42),\n                get_y=parent_label,\n                item_tfms=[Resize(192, method='squish')] \n                ).dataloaders(path, bs=32)\ndls.show_batch(max_n=12)\n\n\n\n\n\nlearn = vision_learner(dls, resnet18, metrics=error_rate)\nlearn.fine_tune(3)\n\n/usr/local/lib/python3.7/dist-packages/torchvision/models/_utils.py:209: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.\n  f\"The parameter '{pretrained_param}' is deprecated since 0.13 and will be removed in 0.15, \"\n/usr/local/lib/python3.7/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=ResNet18_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet18_Weights.DEFAULT` to get the most up-to-date weights.\n  warnings.warn(msg)\nDownloading: \"https://download.pytorch.org/models/resnet18-f37072fd.pth\" to /root/.cache/torch/hub/checkpoints/resnet18-f37072fd.pth\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n      epoch\n      train_loss\n      valid_loss\n      error_rate\n      time\n    \n  \n  \n    \n      0\n      2.054615\n      1.164085\n      0.352941\n      00:08\n    \n  \n\n\n\n\n\n\n\n\n\n  \n    \n      epoch\n      train_loss\n      valid_loss\n      error_rate\n      time\n    \n  \n  \n    \n      0\n      1.213407\n      0.438084\n      0.176471\n      00:12\n    \n    \n      1\n      0.745004\n      0.064237\n      0.000000\n      00:13\n    \n    \n      2\n      0.510461\n      0.036753\n      0.000000\n      00:13"
  },
  {
    "objectID": "lessons/01_what_is_that.html#evaluate",
    "href": "lessons/01_what_is_that.html#evaluate",
    "title": "1- What is that?",
    "section": "Evaluate",
    "text": "Evaluate\n\nis_that_a,_,probs = learn.predict(PILImage.create('bird.jpg'))\nprint(f\"That is a: {is_that_a}.\")\nprint(f\"Probability: {probs[0]:.4f}\")\n\nim = Image.open('bird.jpg')\nim.to_thumb(256,256)\n\n\n\n\n\n\n\n\nThat is a: bird.\nProbability: 0.9944\n\n\n\n\n\n\nis_that_a,_,probs = learn.predict(PILImage.create('plane.jpg'))\nprint(f\"That is a: {is_that_a}.\")\nprint(f\"Probability: {probs[1]:.4f}\")\n\nim = Image.open('plane.jpg')\nim.to_thumb(256,256)\n\n\n\n\n\n\n\n\nThat is a: plane.\nProbability: 0.9989\n\n\n\n\n\n\nis_that_a,_,probs = learn.predict(PILImage.create('superman.jpg'))\nprint(f\"That is a: {is_that_a}.\")\nprint(f\"Probability: {probs[2]:.4f}\")\n\nim = Image.open('superman.jpg')\nim.to_thumb(256,256)\n\n\n\n\n\n\n\n\nThat is a: superman.\nProbability: 0.9998"
  },
  {
    "objectID": "lessons/hello.html",
    "href": "lessons/hello.html",
    "title": "Quarto Basics",
    "section": "",
    "text": "For a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "fastai notes",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0 min\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0 min\n\n\n\n\n\n\nNo matching items"
  }
]